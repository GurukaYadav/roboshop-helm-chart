#A basic manifest for creating a Kubernetes deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
  labels:
    app: {{ .Values.appName }}

spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
        ephoc: "{{ .Values.ephoc }}"
    spec:
      containers:
        - name: {{ .Values.appName }}
          image: 124374336606.dkr.ecr.us-east-1.amazonaws.com/{{ .Values.appName }}
          imagePullPolicy: Always
          envFrom:
          - configMapRef:
              name: {{ .Values.appName }}
          {{- if .Values.externalSecret.enabled }}
          - secretRef:
              name: {{ .Values.appName }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
#the above "resources" can also be written as below
#          resources:
#            requests:
#              memory: {{ .Values.resources.requests.memory }}
#              cpu: {{ .Values.resources.requests.cpu }}
#            limits:
#              memory: {{ .Values.resources.limits.memory }}
#              cpu: {{ .Values.resources.limits.cpu }}
          {{- if .Values.probes.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.endpoint }}
              port: {{ .Values.probes.port }}
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.endpoint }}
              port: {{ .Values.probes.port }}
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
          {{- end }}


#in probes since we are using the same path and container port for livenss and readiness checks, we are making the code dry
#"end Point" is a kubernetes resource used to tarck the ip addresses of the pods which are dynamically assigned to it based on pod labels.